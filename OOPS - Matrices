//Diagonal Matrix code and optimization
#include<bits/stdc++.h>
using namespace std;
class Matrix
{
    private:
        int n;
        int *A;
    public:
        Matrix(int n)
        {
            this->n=n;
            A=new int[n];
        }
        void set(int i,int j,int x);
        void disp();
        ~Matrix()
        {
            delete []A;
        }
    
};
void Matrix::set(int i,int j,int x)
{
    if(i==j)
    A[i-1]=x;
}
void Matrix::disp()
{
    int i,j;
    for(i=0;i<n;i++)
    {
        cout<<endl;
        for(j=0;j<n;j++)
        {
            if(i==j)
            cout<<A[i]<<" ";
            else cout<<"0 ";
        }
    }
}
int main()
{
    Matrix m(4);
    m.set(1,1,1);
    m.set(2,2,4);
    m.set(3,3,6);
    m.set(4,4,8);
    m.disp();
    return 0;
}
